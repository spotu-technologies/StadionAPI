<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- SQL Mapping -->

<!-- mapper 인터페이스가 위치하는 경로 -->
<mapper namespace="com.stadion.api.mapper.MomParticipantLinkInfoMapper">	
    <!-- id: mapper 인터페이스에서 선언한 메서드 이름과 같아야 한다. resultType: VO 클래스가 위치하는 경로 -->
    <select id="getMomParticipantLinkInfo" resultType="com.stadion.api.entity.MomParticipantLinkInfo">	
        SELECT *
        FROM momParticipantLinkInfo
        	WHERE momParticipantLinkInfo.idx = #{idx}
    </select>
    
    <select id="getMomParticipantLinkInfoName" resultType="com.stadion.api.entity.MomParticipantLinkInfo">	
        SELECT *
        FROM momParticipantLinkInfo WHERE momParticipantLinkInfo.accountIdx = #{accountIdx} ORDER BY lastUpdatetime DESC;
    </select>
    
        <!--
     momInfo (status = 1 and isOpen = Y), momParticipantLinkInfo 테이블에서 참여, 
     movementRecordData 테이블에 기록이 1개 이상 있는 경우  
        TEST 2022~현재
         		SELECT count(*) 
		FROM stadion_db_dev.movementRecordData
		where momIdx IN (		
		        SELECT mi.idx
		        FROM stadion_db_dev.momParticipantLinkInfo mpli
		        INNER JOIN stadion_db_dev.momInfo mi ON mpli.momIdx = mi.idx
		        WHERE mpli.accountIdx = #{accountIdx}
		        and mi.isOpen = 'Y'
		)
		AND accountIdx = #{accountIdx}    
		AND YEAR(dateYmd) IN ( 2022, 2023, YEAR(CURRENT_DATE()) )
         
        -->
    <select id="getMomParticipantLinkInfoAttend" resultType="Long">	
		SELECT count(*) 
		FROM stadion_db_dev.momParticipantLinkInfo
		where momIdx = #{momIdx}
		AND accountIdx = #{accountIdx}   
		
    </select>
    
    <select id="getMomParticipantLinkInfoCount" resultType="Long">	
		SELECT count(*) 
		FROM stadion_db_dev.movementRecordData
		where accountIdx = #{accountIdx}
    </select>
    
	<insert id="insertMomParticipantLinkInfo" parameterType="com.stadion.api.entity.MomParticipantLinkInfo">
		INSERT INTO momParticipantLinkInfo
 			(momIdx,    
        <if test="accountIdx != 0 and accountIdx != null">
            accountIdx,
        </if>
 			writer, status, regUnixtime, lastUpdatetime
			) 
			
			VALUES 
			 (
			 #{momIdx},    
        <if test="accountIdx != 0 and accountIdx != null">
            #{accountIdx},
        </if>
 			#{writer}, #{status}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP() 
        	);
	</insert>
	
	<delete id="deleteMomParticipantLinkInfo" parameterType="com.stadion.api.entity.MomParticipantLinkInfo">
		DELETE FROM momParticipantLinkInfo
            WHERE accountIdx=#{accountIdx}
            and momIdx=#{momIdx}
            ;
	</delete>
	
        
</mapper>
