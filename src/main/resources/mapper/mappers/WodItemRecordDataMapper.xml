<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- SQL Mapping -->

<!-- mapper 인터페이스가 위치하는 경로 -->
<mapper namespace="com.stadion.api.mapper.WodItemRecordDataMapper">	
    <select id="getWodItemRecordDataDetail" resultType="com.stadion.api.entity.WodItemRecordDataDetail">	
		SELECT *, wi.name AS programName, wsi.name AS stepName, wsi.explanation AS stepExplanation
		FROM wodItemRecordData AS wird
		
		JOIN wodInfo AS wi
			ON wi.idx = wird.wodIdx
		JOIN wodStepInfo AS wsi
			ON wsi.idx = wird.wodStepIdx
        
        	WHERE accountIdx = #{accountIdx}
        	ORDER BY wird.regUnixtime DESC
    </select>
    
    <select id="getWodItemRecordDataByWodIdx" resultType="com.stadion.api.entity.WodItemRecordData">	
        SELECT *
        FROM wodItemRecordData
        	WHERE wodItemRecordData.wodIdx = #{wodIdx}
        	ORDER BY accountIdx
    </select>
    
    <select id="getWodItemRecordDataByWodAvg" resultType="Double">	
        SELECT AVG(value)
        FROM wodItemRecordData
        	WHERE wodItemRecordData.wodIdx = #{wodIdx}
    </select>
    
        <!-- min(value) AS recordValue -->
	<sql id="minMax">
        ${minMax}(value) 
    </sql>
    
    <select id="getWodItemRecordDataByWodBest" resultType="Double">	
        SELECT <include refid="minMax"/>
        FROM wodItemRecordData
        	WHERE wodItemRecordData.wodIdx = #{wodIdx}
    </select>
    

    <select id="getWodItemRecordDataRecent" resultType="com.stadion.api.entity.WodItemRecordData">	
        SELECT *
        FROM wodItemRecordData WHERE wodItemRecordData.accountIdx = #{accountIdx}
        AND wodItemRecordData.wodStepIdx IN (SELECT wodInfo.idx FROM wodInfo)
        And wodItemRecordData.wodItemIdx IS NOT NULL
        ORDER BY lastUpdatetime DESC;        	
    </select>
    
    <select id="getWodItemRecordDatarecord" resultType="com.stadion.api.entity.WodItemRecordData">	
        SELECT *
        FROM wodItemRecordData WHERE wodItemRecordData.accountIdx = #{accountIdx}
        AND wodItemRecordData.idx IN (SELECT wodStepInfo.wodIdx FROM wodStepInfo)
        And wodItemRecordData.wodItemIdx IS NOT NULL
        ORDER BY lastUpdatetime DESC;        	
    </select>
    
    <select id="getWodItemRecordDataBest" resultType="Long">	
        SELECT MIN(value)
        FROM wodItemRecordData 
        WHERE wodItemRecordData.wodIdx = #{wodIdx}
    </select>
    
    <select id="getRankingScale" resultType="com.stadion.api.entity.WodItemRecordData">	
        SELECT *
        FROM wodItemRecordData 
        where wodRecordIdx IN (
			SELECT idx
			FROM wodRecordInfo
			where wodIdx = #{wodIdx} and useScaled='Y'
			)        	
    </select>    

	<select id="getRankingScaleString" resultType="String">	
        SELECT value
        FROM wodItemRecordData 
        where wodRecordIdx IN (
			SELECT idx
			FROM wodRecordInfo
			where wodIdx = #{wodIdx} and useScaled='Y'
			)        	
    </select>       
    
    <select id="getRankingScaleGender" resultType="com.stadion.api.entity.ScaleGender">	
        SELECT value AS scale, gender
        FROM wodItemRecordData 
        where wodRecordIdx IN (
			SELECT idx
			FROM wodRecordInfo
			where wodIdx = #{wodIdx} and useScaled='Y'
			)        	
    </select> 
    
    <select id="getWodItemRecordListByWodIdx" resultType="com.stadion.api.entity.WodItemRecordData">	
        SELECT *
        FROM wodItemRecordData 
        where wodRecordIdx IN (
			SELECT idx
			FROM wodRecordInfo
			where wodIdx = #{wodIdx}
			)    	
    </select>    
    
    
	<insert id="insertWodItemRecord" parameterType="com.stadion.api.entity.WodItemRecordData">
		INSERT INTO wodItemRecordData
 			(wodIdx, boxIdx, accountIdx, wbLinkIdx, wodStepIdx, 
        <if test="wodItemIdx != 0 and wodItemIdx != null">
            wodItemIdx,
        </if>
        
        	wodRecordIdx, recordType, recordUnit,
        <if test="grade !='' and grade != null">
            grade,
        </if>
        		value, value2, gender, 
			    age, ageGroup, height, heightGroup, weight, weightGroup, region, regionGroup, 
			    dateYmd, writer, status, regUnixtime, lastUpdatetime
			) 
			
			VALUES 
			 (#{wodIdx}, #{boxIdx}, #{accountIdx}, #{wbLinkIdx}, #{wodStepIdx}, 
        <if test="wodItemIdx != 0 and wodItemIdx != null">
            #{wodItemIdx},
        </if>
        	#{wodRecordIdx}, #{recordType}, #{recordUnit},
        <if test="grade != '' and grade != null">
            #{grade},
        </if>
        		#{value}, #{value2}, #{gender}, 
			    #{age}, #{ageGroup}, #{height}, #{heightGroup}, #{weight}, #{weightGroup}, #{region}, #{regionGroup}, 
			    #{dateYmd}, #{writer}, #{status}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP() 
        	);
	</insert>    

    <sql id="orderType">
        ${orderType}
    </sql>
    

    <select id="getWodItemRecordRankingList" parameterType="com.stadion.api.entity.RankingDataParameter" resultType="com.stadion.api.entity.WodItemRecordData">	
	    Select *
			FROM wodItemRecordData
			where  wodIdx = #{wodIdx}
			and status=1
        
        <if test="gender != '' and gender != null">
             and gender = #{gender}
        </if>
        <if test="boxIdx != '' and boxIdx != null">
             and boxIdx = #{boxIdx}
        </if>
        <if test="scale != '' and scale != null">
             and gender = #{gender}
        </if>

			GROUP BY accountIdx 
			
			ORDER by
			 value 
			 <include refid="orderType"/>
		    LIMIT #{count} OFFSET #{start};
	
	  </select>    

</mapper>
