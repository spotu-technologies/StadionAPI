<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- SQL Mapping -->

<!-- mapper 인터페이스가 위치하는 경로 -->
<mapper namespace="com.stadion.api.mapper.MovementRecordDataMapper">	
    <!-- id: mapper 인터페이스에서 선언한 메서드 이름과 같아야 한다. resultType: VO 클래스가 위치하는 경로 -->
    <select id="getMovementRecordData" resultType="com.stadion.api.entity.MovementRecordDataDetail">	
        SELECT mrd.*, mi.movement, mi.unit
        FROM movementRecordData AS mrd
        JOIN movementInfo AS mi
        ON mi.idx = mrd.movementIdx
        	WHERE accountIdx = #{accoutIdx} 
        	ORDER BY mrd.lastUpdatetime DESC;
    </select>
    
    
    <select id="getMovementRecordDataAll" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData ORDER BY lastUpdatetime DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDataRecent" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData WHERE movementRecordData.accountIdx = #{accountIdx} ORDER BY lastUpdatetime DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDataBest" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData WHERE movementRecordData.accountIdx = #{accountIdx} ORDER BY point DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDataYearBest" parameterType="long" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData 
        WHERE movementRecordData.accountIdx = #{accountIdx} AND YEAR(movementRecordData.dateYmd) = #{currentYear} ORDER BY point DESC;
        	
    </select>


    <select id="getMovementRecordDataDetail" parameterType="long" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData 
        WHERE movementRecordData.accountIdx = #{accountIdx} AND movementRecordData.movementIdx = #{movementIdx} ORDER BY point DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDataRecentDetail" parameterType="long" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData 
        WHERE movementRecordData.accountIdx = #{accountIdx} AND movementRecordData.movementIdx = #{movementIdx} ORDER BY lastUpdatetime DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDatMomLevel" parameterType="long" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData 
        WHERE movementRecordData.accountIdx = #{accountIdx} AND movementRecordData.momIdx = 0 ORDER BY lastUpdatetime DESC;
        	
    </select>
    
    
    <select id="getMovementRecordDatChallenge" parameterType="long" resultType="com.stadion.api.entity.MovementRecordData">	
        SELECT *
        FROM movementRecordData 
        WHERE movementRecordData.accountIdx = #{accountIdx} AND movementRecordData.momIdx > 0 ORDER BY lastUpdatetime DESC;
        	
    </select>

	<insert id="insertRecordData" parameterType="com.stadion.api.entity.MovementRecordData">
		INSERT INTO stadion_db_dev.movementRecordData
 			(movementIdx, 
        <if test="momIdx != '' and momIdx != null">
            momIdx,
        </if>
        <if test="mvLinkIdx != '' and mvLinkIdx != null">
            mvLinkIdx,
        </if>
        <if test="mpLinkIdx != '' and mpLinkIdx != null">
            mpLinkIdx,
        </if>
 				accountIdx,
				value, value2, recordType, 
            point,
				gradeLevel, gender, 
			    age, ageGroup, height, heightGroup, weight, weightGroup, region, regionGroup, 
			    dateYmd, writer, status, regUnixtime, lastUpdatetime
			) 
			
			VALUES 
			(#{movementIdx}, 
        <if test="momIdx != '' and momIdx != null">
            #{momIdx},
        </if>
        <if test="mvLinkIdx != '' and mvLinkIdx != null">
            #{mvLinkIdx},
        </if>
        <if test="mpLinkIdx != '' and mpLinkIdx != null">
            #{mpLinkIdx},
        </if>
        
			 #{accountIdx},
				#{value}, #{value2}, #{recordType}, 
	         #{point},
				#{gradeLevel}, #{gender}, 
			    #{age}, #{ageGroup}, #{height}, #{heightGroup}, #{weight}, #{weightGroup}, #{region}, #{regionGroup}, 
		
			    #{dateYmd}, #{writer}, #{status}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP() 
        	);
	</insert>

    <select id="getmovementRecordDataMtcCount" parameterType="long" resultType="Long">	
        SELECT count(*)
        FROM movementRecordData 
        WHERE movementRecordData.momIdx = #{momIdx} 
        AND status=1
        	
    </select>

</mapper>
