<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- SQL Mapping -->

<!-- mapper 인터페이스가 위치하는 경로 -->
<mapper namespace="com.stadion.api.mapper.WodItemOneRmDataMapper">	
    <!-- id: mapper 인터페이스에서 선언한 메서드 이름과 같아야 한다. resultType: VO 클래스가 위치하는 경로 -->
    <select id="getWodItemOneRmData" resultType="com.stadion.api.entity.WodItemOneRmData">	
        SELECT *
        FROM wodItemOneRmData
        	WHERE wodItemOneRmData.idx = #{idx}
    </select>
    
    
    <select id="getWodItemOneRmDataPersonal" resultType="com.stadion.api.entity.WodItemOneRmData">	
        SELECT *
        FROM wodItemOneRmData WHERE wodItemOneRmData.accountIdx = #{accountIdx} AND wodItemOneRmData.wodItemIdx IN (15,12,11,23,4,35,25,14,7,3) ORDER BY lastUpdatetime DESC;        	
    </select>
    
    
    <select id="getWodItemOneRmDataPersonalDetail" resultType="com.stadion.api.entity.WodItemOneRmData">	
        WITH RankedData AS (
    SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY wodItemIdx ORDER BY value2 DESC) AS rnk
    FROM wodItemOneRmData
    WHERE accountIdx = #{accountIdx}
      AND wodItemIdx IN (15, 12, 11, 23, 4, 35, 25, 14, 7, 3)
    )
    SELECT
        *
    FROM RankedData
    WHERE rnk = 1
    ORDER BY FIELD(wodItemIdx, 15, 12, 11, 23, 4, 35, 25, 14, 7, 3), value2 DESC;
    </select>
    
    <select id="getWodItemOneRmDataPoundHistory" parameterType="map" resultType="com.stadion.api.entity.WodItemOneRmDataHistory">
    <![CDATA[
		SELECT accountIdx, DATE_FORMAT( FROM_UNIXTIME(regUnixTime), '%m') AS month, SUM(value2) AS total
		FROM wodItemOneRmData
        	WHERE  accountIdx = #{accountIdx}
            and wodItemIdx IN (15, 12, 4)
        	and DATE_FORMAT( FROM_UNIXTIME(regUnixTime), '%Y')=DATE_FORMAT(CURDATE(), '%Y')
            GROUP BY month    
        	]]>         	
    </select>
    
    
    <select id="getWodItemOneRmPoundClubByGender" resultType="com.stadion.api.entity.NumbersRankDataIdx">
		select accountIdx, ai.accountNick, sum(wt) AS total
			from 
			(
				SELECT accountIdx, max(value2) AS wt, max(value2) AS lift
				FROM wodItemOneRmData AS wiord
				JOIN accountInfo AS ai
				ON ai.idx = wiord.accountIdx and ai.gender = #{gender}
				where wodItemIdx = 15
				GROUP BY accountIdx
			
				Union all
				SELECT accountIdx, max(value2) AS wt, max(value2) AS squat
				FROM wodItemOneRmData AS wiord
				JOIN accountInfo AS ai
				ON ai.idx = wiord.accountIdx and ai.gender = #{gender}
				where wodItemIdx = 12
				GROUP BY accountIdx
			
				Union all
				SELECT accountIdx, max(value2) AS wt, max(value2) AS press
				FROM wodItemOneRmData AS wiord
				JOIN accountInfo AS ai
				ON ai.idx = wiord.accountIdx and ai.gender = #{gender}
				where wodItemIdx = 4
				GROUP BY accountIdx
				order by wt DESC
			) AS T
			JOIN accountInfo as ai
			ON ai.idx = accountIdx
			group by accountIdx
			order by total DESC
			LIMIT 10
    <!-- 
    SELECT accountIdx, sum(value2) AS wt
		FROM stadion_db_dev.wodItemOneRmData AS wiord
		JOIN accountInfo AS ai
		ON ai.idx = wiord.accountIdx and ai.gender = #{gender}
		where wodItemIdx in (15,12, 4)
		GROUP BY accountIdx
		order by wt DESC
		LIMIT 10
		-->
    </select>
    
    <select id="getNumbersRankDataDeadLift" resultType="String">
	    SELECT MAX(value2) AS deadLif
			FROM wodItemOneRmData
			where  wodItemIdx=15
			and accountIdx = #{accountIdx}
    </select>
    <select id="getNumbersRankDataBenchPress" resultType="String">
	    SELECT MAX(value2) AS benchPress
			FROM wodItemOneRmData
			where  wodItemIdx=4
			and accountIdx = #{accountIdx}
    </select>
    <select id="getNumbersRankDataSquat" resultType="String">
	    SELECT MAX(value2) AS backSquat
			FROM wodItemOneRmData
			where  wodItemIdx=12
			and accountIdx = #{accountIdx}
    </select>
    
    <select id="getNumbersRankData" resultType="com.stadion.api.entity.NumbersRankData">
    SELECT ai.idx, ai.accountNick, MAX(WIORD1.value2) AS deadLift, MAX(WIORD2.value2) AS backSquat, MAX(WIORD3.value2) AS benchPress, SUM(WIORD4.value2) AS total
		FROM accountInfo AS ai
		JOIN wodItemOneRmData AS WIORD1
		ON WIORD1.wodItemIdx = 15 and WIORD1.accountIdx=ai.idx
		JOIN wodItemOneRmData AS WIORD2
		ON WIORD2.wodItemIdx = 12 and WIORD2.accountIdx=ai.idx
		JOIN wodItemOneRmData AS WIORD3
		ON WIORD3.wodItemIdx = 4 and WIORD3.accountIdx=ai.idx
		JOIN wodItemOneRmData AS WIORD4
		ON WIORD4.wodItemIdx IN (15,12,4) and WIORD4.accountIdx=ai.idx
		
		where ai.idx = #{accountIdx}
    </select>    
    
    <select id="getWodItemOneRmDataClub" resultType="com.stadion.api.entity.WodItemOneRmData">	
        WITH RankedData AS (
    SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY wodItemIdx ORDER BY value2 DESC) AS rnk
    FROM wodItemOneRmData
    WHERE accountIdx = #{accountIdx}
      AND wodItemIdx IN (15, 12, 4)
    )
    SELECT
        *
    FROM RankedData
    WHERE rnk = 1
    ORDER BY FIELD(wodItemIdx, 15, 12, 4), value2 DESC;
        	
    </select>
    
    
    <select id="getWodItemOneRmDataClubMan" resultType="com.stadion.api.entity.WodItemOneRmData">	
         WITH RankedData AS (
    SELECT
        wr.accountIdx,
        wr.wodItemIdx,
        MAX(wr.value2) AS max_value2,
        ROW_NUMBER() OVER (PARTITION BY wr.accountIdx, wr.wodItemIdx ORDER BY MAX(wr.value2) DESC) AS rnk
    FROM wodItemOneRmData wr
    JOIN accountInfo ai ON wr.accountIdx = ai.idx
    WHERE wr.wodItemIdx IN (15, 12, 4) AND ai.gender = 'M'
    GROUP BY wr.accountIdx, wr.wodItemIdx
    )

    SELECT
       accountIdx,
       wodItemIdx,
       MAX(CASE WHEN rnk = 1 THEN max_value2 END) AS value2,
       NULL AS total_value2
   FROM RankedData
   GROUP BY accountIdx, wodItemIdx

   UNION ALL

   SELECT
      accountIdx,
      NULL AS wodItemIdx,
      NULL AS value2,
      SUM(max_value2) AS total_value2
   FROM (
      SELECT
         accountIdx,
         MAX(max_value2) AS max_value2
      FROM RankedData
      WHERE rnk = 1
      GROUP BY accountIdx, wodItemIdx
      ) AS Subquery
      GROUP BY accountIdx
      ORDER BY total_value2 DESC, accountIdx, wodItemIdx DESC, value2;
        	
    </select>
    
    
    <select id="getWodItemOneRmDataClubWoman" resultType="com.stadion.api.entity.WodItemOneRmData">	
         WITH RankedData AS (
    SELECT
        wr.accountIdx,
        wr.wodItemIdx,
        MAX(wr.value2) AS max_value2,
        ROW_NUMBER() OVER (PARTITION BY wr.accountIdx, wr.wodItemIdx ORDER BY MAX(wr.value2) DESC) AS rnk
    FROM wodItemOneRmData wr
    JOIN accountInfo ai ON wr.accountIdx = ai.idx
    WHERE wr.wodItemIdx IN (15, 12, 4) AND ai.gender = 'W'
    GROUP BY wr.accountIdx, wr.wodItemIdx
    )

    SELECT
       accountIdx,
       wodItemIdx,
       MAX(CASE WHEN rnk = 1 THEN max_value2 END) AS value2,
       NULL AS total_value2
   FROM RankedData
   GROUP BY accountIdx, wodItemIdx

   UNION ALL

   SELECT
      accountIdx,
      NULL AS wodItemIdx,
      NULL AS value2,
      SUM(max_value2) AS total_value2
   FROM (
      SELECT
         accountIdx,
         MAX(max_value2) AS max_value2
      FROM RankedData
      WHERE rnk = 1
      GROUP BY accountIdx, wodItemIdx
      ) AS Subquery
      GROUP BY accountIdx
      ORDER BY total_value2 DESC, accountIdx, wodItemIdx DESC, value2 DESC;
        	
    </select>
    
    
    <select id="getWodItemOneRmDataClubAll" resultType="com.stadion.api.entity.WodItemOneRmData">	
        WITH RankedData AS (
    SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY wodItemIdx ORDER BY value2 DESC) AS rnk
    FROM wodItemOneRmData
    WHERE wodItemIdx IN (15, 12, 4)
    )
    SELECT
        *
    FROM RankedData ORDER BY FIELD(wodItemIdx, 15, 12, 4), value2;
        	
    </select>
    
    <sql id="rmTypeFilter">
        FROM ${rmType}
    </sql>
    
    <sql id="rmTypeFilterInsert">
        INTO ${rmType}
    </sql>

	<select id="getWodItemRmData" parameterType="map" resultType="com.stadion.api.entity.WodItemRmData">
	SELECT * 
	 <include refid="rmTypeFilter"/> 
        	WHERE  accountIdx = #{accountIdx}         	
    </select>
    
    
    <insert id="insertPersonalBest" parameterType="com.stadion.api.entity.WodItemInsertRmData">
	INSERT 
	 <include refid="rmTypeFilterInsert"/> 
	 (accountIdx, wodItemIdx, recordType, recordUnit,
	 value, value2, writer, status,
	 regUnixtime, lastUpdatetime) 
        	
     VALUES(
     #{accountIdx}, #{wodItemIdx}, #{recordType}, #{recordUnit},
	 #{value}, #{value2}, #{writer}, #{status},
     UNIX_TIMESTAMP(), UNIX_TIMESTAMP()
     );         	
    </insert>
    
</mapper>
